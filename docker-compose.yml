services:
  db:
    image: postgres:16-alpine
    container_name: test-driving-superpowers-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: test_driving_superpowers
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d test_driving_superpowers"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: test-driving-superpowers-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    depends_on:
      - db

  app:
    # This is your actual application runtime / dev container
    # For example, Node, Python, .NET, etc.
    # For now I'll assume Node 20 dev image. Swap this to whatever your app actually is.
    image: node:20-alpine
    container_name: test-driving-superpowers-app
    working_dir: /workspace
    command: ["sleep", "infinity"]
      # ^ in dev mode this just keeps the container alive so you can exec in,
      # run npm install, run tests, etc. Later this could be ["npm","run","dev"]
    volumes:
      - app-source:/workspace        # <-- this is the shared source code volume
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://app_user:app_password@db:5432/test_driving_superpowers

volumes:
  postgres-data:
  app-source:
